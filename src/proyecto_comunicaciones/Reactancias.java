/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_comunicaciones;

/**
 *
 * @author Chocodrilo
 */
public class Reactancias extends javax.swing.JFrame {
 //declaracion de variables para las reactancias
   double getFaradios;
   double getFrecuencia;
   double getFrecuencia1;
   double getHenrios;
   double getHenr;
   double getFarad;
   double getHercios;
   double getHercios1;
   formatos fmt = new formatos();
    public Reactancias() {
        initComponents();
         this.setTitle("Reactancias");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        Xl = new javax.swing.JTextField();
        Xc = new javax.swing.JTextField();
        faradios = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        herz1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fara = new javax.swing.JTextField();
        henrios = new javax.swing.JComboBox<>();
        frec = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        herz = new javax.swing.JTextField();
        Resuelve = new javax.swing.JButton();
        frecuencia = new javax.swing.JComboBox<>();
        hen = new javax.swing.JTextField();
        Resuelve1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Resuelve2 = new javax.swing.JButton();
        Volver = new javax.swing.JButton();
        Resuelve3 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cp1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cc1 = new javax.swing.JTextField();
        cc2 = new javax.swing.JTextField();
        cp2 = new javax.swing.JTextField();
        cp3 = new javax.swing.JTextField();
        cc3 = new javax.swing.JTextField();
        conv = new javax.swing.JButton();
        conv1 = new javax.swing.JButton();
        Volver1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(689, 760));
        setMinimumSize(new java.awt.Dimension(689, 760));
        setPreferredSize(new java.awt.Dimension(689, 760));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(Xl, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 630, 236, 34));
        jPanel1.add(Xc, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 260, 236, 34));

        faradios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10^(−1) (dF) decifaradio", "10^(−2)(cF) centifaradio", "10^(−3) (mF) milifaradio", "10^(-6) (µF) microfaradio", "10^(−9) (nF) nanofaradio", "10^(−12) (pF) picofaradio", "(F) Faradio", "10^(1 ) (daF) decafaradio", "10^(2)(hF) hectofaradio", "10^(3) (kF) kilofaradio", "10^(6) (MF) megafaradio", "10^(9) (GF) gigafaradio", "10^(12) (TF) terafaradio" }));
        jPanel1.add(faradios, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, -1, 35));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Ingrese la inductancia (L):");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 420, -1, -1));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Reactancia Capacitiva (XC):");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Reactancia Inductiva (XL):");
        jLabel8.setToolTipText("");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 640, -1, -1));
        jPanel1.add(herz1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 510, 233, 34));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Ingrese la capacidad electrica (C):");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, -1, -1));
        jPanel1.add(fara, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 228, 35));

        henrios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10^(−1) (dH) decihenrio", "10^(−2)(cH) centihenrio", "10^(−3) (mH) milihenrio", "10^(-6) (µH) microhenrio", "10^(−9) (nH) nanohenrio", "10^(−12) (pH) picohenrio", "(H) Henrio", "10^(1 ) (daH) decahenrio", "10^(2)(hH) hectohenrio", "10^(3) (kH) kilohenrio", "10^(6) (MH) megahenrio", "10^(9) (GH) gigahenrio", "10^(12) (TH) terahenrio" }));
        jPanel1.add(henrios, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 440, -1, 34));

        frec.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10^(−1) (dHZ) decihercio", "10^(−2)(cHZ) centihercio", "10^(−3) (mHZ) milihercio", "10^(-6) (µHZ) microhercio", "10^(−9) (nHZ) nanohercio", "10^(−12) (pHZ) picohercio", "(HZ) hercio", "10^(1 ) (daHZ) decahercio", "10^(2)(hHZ) hectohercio", "10^(3) (kHZ) kilohercio", "10^(6) (MHZ) megahercio", "10^(9) (GHZ) gigahercio", "10^(12) (THZ) terahercio" }));
        jPanel1.add(frec, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 510, -1, 34));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Ingrese la frecuencia (f):");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, -1));
        jPanel1.add(herz, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 228, 32));

        Resuelve.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Resuelve.setText("Resolver");
        Resuelve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResuelveActionPerformed(evt);
            }
        });
        jPanel1.add(Resuelve, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 99, 49));

        frecuencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10^(−1) (dHZ) decihercio", "10^(−2)(cHZ) centihercio", "10^(−3) (mHZ) milihercio", "10^(-6) (µHZ) microhercio", "10^(−9) (nHZ) nanohercio", "10^(−12) (pHZ) picohercio", "(HZ) hercio", "10^(1 ) (daHZ) decahercio", "10^(2)(hHZ) hectohercio", "10^(3) (kHZ) kilohercio", "10^(6) (MHZ) megahercio", "10^(9) (GHZ) gigahercio", "10^(12) (THZ) terahercio" }));
        jPanel1.add(frecuencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, 140, 32));
        jPanel1.add(hen, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 440, 233, 30));

        Resuelve1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Resuelve1.setText("Resolver");
        Resuelve1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Resuelve1ActionPerformed(evt);
            }
        });
        jPanel1.add(Resuelve1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 570, -1, 50));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Ingrese la frecuencia (Hz):");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 490, -1, -1));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Ω");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 270, -1, -1));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Ω");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 640, -1, -1));

        Resuelve2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Resuelve2.setText("Limpiar");
        Resuelve2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Resuelve2ActionPerformed(evt);
            }
        });
        jPanel1.add(Resuelve2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 200, 99, 49));

        Volver.setText("Regresar");
        Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverActionPerformed(evt);
            }
        });
        jPanel1.add(Volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 670, -1, -1));

        Resuelve3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Resuelve3.setText("Limpiar");
        Resuelve3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Resuelve3ActionPerformed(evt);
            }
        });
        jPanel1.add(Resuelve3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 570, -1, 50));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_comunicaciones/imagenes/3120.png"))); // NOI18N
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 740));

        jTabbedPane1.addTab("Reactancias", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cp1.setMinimumSize(new java.awt.Dimension(15, 50));
        cp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cp1ActionPerformed(evt);
            }
        });
        jPanel2.add(cp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 148, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("°");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 109, 14, -1));

        cc1.setMinimumSize(new java.awt.Dimension(15, 50));
        cc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cc1ActionPerformed(evt);
            }
        });
        jPanel2.add(cc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 470, 148, 30));

        cc2.setMinimumSize(new java.awt.Dimension(15, 50));
        jPanel2.add(cc2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 470, 148, 30));

        cp2.setMinimumSize(new java.awt.Dimension(15, 50));
        jPanel2.add(cp2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 148, 30));

        cp3.setMinimumSize(new java.awt.Dimension(15, 50));
        jPanel2.add(cp3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 110, 148, 30));

        cc3.setMinimumSize(new java.awt.Dimension(15, 50));
        jPanel2.add(cc3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 470, 148, 30));

        conv.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        conv.setText("Convertir");
        conv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convActionPerformed(evt);
            }
        });
        jPanel2.add(conv, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 169, -1, -1));

        conv1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        conv1.setText("Convertir");
        conv1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conv1ActionPerformed(evt);
            }
        });
        jPanel2.add(conv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 530, -1, -1));

        Volver1.setText("Regresar");
        Volver1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Volver1ActionPerformed(evt);
            }
        });
        jPanel2.add(Volver1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 580, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_comunicaciones/imagenes/31209.png"))); // NOI18N
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 700));

        jTabbedPane1.addTab("Conversión de coordenadas", jPanel2);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 770));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Resuelve1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Resuelve1ActionPerformed
       //validacion para campos vacios
        if(!hen.getText().equals("") && !herz1.getText().equals("")){
        IH();
        FH1();
        resuelveRI();
         }else{
           javax.swing.JOptionPane.showMessageDialog(this,"Faltan campos por llenar \n","CUIDADO",javax.swing.JOptionPane.INFORMATION_MESSAGE);  
      }
    }//GEN-LAST:event_Resuelve1ActionPerformed

    private void ResuelveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResuelveActionPerformed
       //validacion paara campos vacios
        if(!fara.getText().equals("") && !herz.getText().equals("")){
        CE();
        FH();
        resuelveXC();
    }else{
           javax.swing.JOptionPane.showMessageDialog(this,"Faltan campos por llenar \n","CUIDADO",javax.swing.JOptionPane.INFORMATION_MESSAGE);  
      }
    }//GEN-LAST:event_ResuelveActionPerformed
//boton limpiar
    private void Resuelve2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Resuelve2ActionPerformed
        herz.setText("");
        fara.setText("");
        Xc.setText("");
    }//GEN-LAST:event_Resuelve2ActionPerformed
//boton limpiar
    private void Resuelve3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Resuelve3ActionPerformed
        hen.setText("");
        herz1.setText("");
        Xl.setText("");
    }//GEN-LAST:event_Resuelve3ActionPerformed

    private void cp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cp1ActionPerformed

    private void cc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cc1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cc1ActionPerformed

    private void convActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convActionPerformed
        PolarCartesiana();
    }//GEN-LAST:event_convActionPerformed

    private void conv1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conv1ActionPerformed
        CartesianaPolar();
    }//GEN-LAST:event_conv1ActionPerformed

    private void Volver1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Volver1ActionPerformed
       dispose();
      new Menu().setVisible(true);
    }//GEN-LAST:event_Volver1ActionPerformed

    private void VolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverActionPerformed
         dispose();
      new Menu().setVisible(true);
    }//GEN-LAST:event_VolverActionPerformed
//metodo que obtiene del combobox los faradios y los almacena en una variable
   public void CE(){
       getFarad=Double.parseDouble(fara.getText());
       if (faradios.getSelectedIndex()==0){
           getFaradios=getFarad*Math.pow(10,(-1));
       }
       if (faradios.getSelectedIndex()==1){
           getFaradios=getFarad*Math.pow(10,(-2));
       }
       if (faradios.getSelectedIndex()==2){
           getFaradios=getFarad*Math.pow(10,(-3));
       }
       if (faradios.getSelectedIndex()==3){
           getFaradios=getFarad*Math.pow(10,(-6));
       }
       if (faradios.getSelectedIndex()==4){
           getFaradios=getFarad*Math.pow(10,(-9));
       }
       if (faradios.getSelectedIndex()==5){
           getFaradios=getFarad*Math.pow(10,(-12));
       }
       if (faradios.getSelectedIndex()==6){
           getFaradios=getFarad;
       }
       if (faradios.getSelectedIndex()==7){
           getFaradios=getFarad*Math.pow(10,1);
       }
       if (faradios.getSelectedIndex()==8){
              getFaradios=getFarad*Math.pow(10,2);
       }
       if (faradios.getSelectedIndex()==9){
              getFaradios=getFarad*Math.pow(10,3);
       }
       if (faradios.getSelectedIndex()==10){
              getFaradios=getFarad*Math.pow(10,6);
       }
       if (faradios.getSelectedIndex()==11){
              getFaradios=getFarad*Math.pow(10,9);
       }
       if (faradios.getSelectedIndex()==12){
              getFaradios=getFarad*Math.pow(10,12);
       }
   }
   //metodo que obtiene del combobox la frecuencia y los almacena en una variable
    public void FH(){
      getHercios=Double.parseDouble(herz.getText());
       if (frecuencia.getSelectedIndex()==0){
           getFrecuencia=getHercios*Math.pow(10,(-1));
       }
       if (frecuencia.getSelectedIndex()==1){
           getFrecuencia=getHercios*Math.pow(10,(-2));
       }
       if (frecuencia.getSelectedIndex()==2){
           getFrecuencia=getHercios*Math.pow(10,(-3));
       }
       if (frecuencia.getSelectedIndex()==3){
           getFrecuencia=getHercios*Math.pow(10,(-6));
       }
       if (frecuencia.getSelectedIndex()==4){
           getFrecuencia=getHercios*Math.pow(10,(-9));
       }
       if (frecuencia.getSelectedIndex()==5){
           getFrecuencia=getHercios*Math.pow(10,(-12));
       }
        if (frecuencia.getSelectedIndex()==6){
           getFrecuencia=getHercios;
       }
       if (frecuencia.getSelectedIndex()==7){
           getFrecuencia=getHercios*Math.pow(10,1);
       }
       if (frecuencia.getSelectedIndex()==8){
              getFrecuencia=getHercios*Math.pow(10,2);
       }
       if (frecuencia.getSelectedIndex()==9){
              getFrecuencia=getHercios*Math.pow(10,3);
       }
       if (frecuencia.getSelectedIndex()==10){
              getFrecuencia=getHercios*Math.pow(10,6);
       }
       if (frecuencia.getSelectedIndex()==11){
             getFrecuencia=getHercios*Math.pow(10,9);
       }
       if (frecuencia.getSelectedIndex()==12){
             getFrecuencia=getHercios*Math.pow(10,12);
       }
   }
    //metodo que obtiene del combobox  la segunda frecuencia y los almacena en una variable
     public void FH1(){
      getHercios1=Double.parseDouble(herz1.getText());
       if (frec.getSelectedIndex()==0){
           getFrecuencia1=getHercios1*Math.pow(10,(-1));
       }
       if (frec.getSelectedIndex()==1){
           getFrecuencia1=getHercios1*Math.pow(10,(-2));
       }
       if (frec.getSelectedIndex()==2){
           getFrecuencia1=getHercios1*Math.pow(10,(-3));
       }
       if (frec.getSelectedIndex()==3){
           getFrecuencia1=getHercios1*Math.pow(10,(-6));
       }
       if (frec.getSelectedIndex()==4){
           getFrecuencia1=getHercios1*Math.pow(10,(-9));
       }
       if (frec.getSelectedIndex()==5){
           getFrecuencia1=getHercios1*Math.pow(10,(-12));
       }
        if (frec.getSelectedIndex()==6){
           getFrecuencia1=getHercios1;
       }
       if (frec.getSelectedIndex()==7){
           getFrecuencia1=getHercios1*Math.pow(10,1);
       }
       if (frec.getSelectedIndex()==8){
              getFrecuencia1=getHercios1*Math.pow(10,2);
       }
       if (frec.getSelectedIndex()==9){
              getFrecuencia1=getHercios1*Math.pow(10,3);
       }
       if (frec.getSelectedIndex()==10){
              getFrecuencia1=getHercios1*Math.pow(10,6);
       }
       if (frec.getSelectedIndex()==11){
             getFrecuencia1=getHercios1*Math.pow(10,9);
       }
       if (frec.getSelectedIndex()==12){
             getFrecuencia1=getHercios1*Math.pow(10,12);
       }
   }
 //metodo que obtiene del combobox los henrios y los almacena en una variable
     public void IH(){
      getHenr=Double.parseDouble(hen.getText());
       if (henrios.getSelectedIndex()==0){
           getHenrios=getHenr*Math.pow(10,(-1));
       }
       if (henrios.getSelectedIndex()==1){
           getHenrios=getHenr*Math.pow(10,(-2));
       }
       if (henrios.getSelectedIndex()==2){
           getHenrios=getHenr*Math.pow(10,(-3));
       }
       if (henrios.getSelectedIndex()==3){
           getHenrios=getHenr*Math.pow(10,(-6));
       }
       if (henrios.getSelectedIndex()==4){
           getHenrios=getHenr*Math.pow(10,(-9));
       }
       if (henrios.getSelectedIndex()==5){
           getHenrios=getHenr*Math.pow(10,(-12));
       }
        if (henrios.getSelectedIndex()==6){
           getHenrios=getHenr;
       }
       if (henrios.getSelectedIndex()==7){
           getHenrios=getHenr*Math.pow(10,1);
       }
       if (henrios.getSelectedIndex()==8){
              getHenrios=getHenr*Math.pow(10,2);
       }
       if (henrios.getSelectedIndex()==9){
              getHenrios=getHenr*Math.pow(10,3);
       }
       if (henrios.getSelectedIndex()==10){
              getHenrios=getHenr*Math.pow(10,6);
       }
       if (henrios.getSelectedIndex()==11){
             getHenrios=getHenr*Math.pow(10,9);
       }
       if (henrios.getSelectedIndex()==12){
             getHenrios=getHenr*Math.pow(10,12);
       }
   }  
     //metodo que resuelve la reactancia capacitiva mediante la formula
    public void resuelveXC(){
        double xc=-1/(((2*Math.PI)*(getFrecuencia))*getFaradios);
        fmt.setRes(xc);
       Xc.setText("j"+fmt.getRes()+"Ω");
       //Xc.setText(Double.toString(getFrecuencia));
        
    }
    
    public void resuelveRI(){
        double xl=(((2*Math.PI)*(getFrecuencia1))*getHenrios);
        fmt.setRes(xl);
       Xl.setText("j"+fmt.getRes()+"Ω");
      // Xl.setText(Double.toString(getFrecuencia1));
    }
    //metodo que resuelve la obtencion de polar a cartesiana
    public void PolarCartesiana() {                                          
        double r,ang,ang1,x,y;
        //se utiliza la libreria Math
        r=Double.parseDouble(cp1.getText());
        ang=Double.parseDouble(cp2.getText());
        ang1=ang*Math.PI/180;
        x=r*Math.cos(ang1);
        y=r*Math.sin(ang1);
        x=Math.rint(x*100)/100;
        y=Math.rint(y*100)/100;
        
        cp3.setText(""+x+","+y);
    }    
    //metodo que resuelve la obtencion de cartesiana a polar
    public void CartesianaPolar() {                                          
        double x;
        double y;
        //se utiliza la libreria Math
        x=Double.parseDouble(cc1.getText());
        y=Double.parseDouble(cc2.getText());
        double r = Math.hypot(x, y);
        double aRad = Math.atan2(y, x);
        double a = Math.toDegrees(aRad);
 
        cc3.setText(""+x+","+y+"°");
    }    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reactancias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reactancias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reactancias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reactancias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reactancias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Resuelve;
    private javax.swing.JButton Resuelve1;
    private javax.swing.JButton Resuelve2;
    private javax.swing.JButton Resuelve3;
    private javax.swing.JButton Volver;
    private javax.swing.JButton Volver1;
    private javax.swing.JTextField Xc;
    private javax.swing.JTextField Xl;
    private javax.swing.JTextField cc1;
    private javax.swing.JTextField cc2;
    private javax.swing.JTextField cc3;
    private javax.swing.JButton conv;
    private javax.swing.JButton conv1;
    private javax.swing.JTextField cp1;
    private javax.swing.JTextField cp2;
    private javax.swing.JTextField cp3;
    private javax.swing.JTextField fara;
    private javax.swing.JComboBox<String> faradios;
    private javax.swing.JComboBox<String> frec;
    private javax.swing.JComboBox<String> frecuencia;
    private javax.swing.JTextField hen;
    private javax.swing.JComboBox<String> henrios;
    private javax.swing.JTextField herz;
    private javax.swing.JTextField herz1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
