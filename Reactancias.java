/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_comunicaciones;

/**
 *
 * @author Chocodrilo
 */
public class Reactancias extends javax.swing.JFrame {

   double getFaradios;
   double getFrecuencia;
   double getFrecuencia1;
   double getHenrios;
   double getHenr;
   double getFarad;
   double getHercios;
   double getHercios1;
   formatos fmt = new formatos();
    public Reactancias() {
        initComponents();
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Xl = new javax.swing.JTextField();
        Xc = new javax.swing.JTextField();
        faradios = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        herz1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fara = new javax.swing.JTextField();
        henrios = new javax.swing.JComboBox<>();
        frec = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        herz = new javax.swing.JTextField();
        Resuelve = new javax.swing.JButton();
        frecuencia = new javax.swing.JComboBox<>();
        hen = new javax.swing.JTextField();
        Resuelve1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1024, 680));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Reactancia Inductiva");

        faradios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10^(−1) (dF) decifaradio", "10^(−2)(cF) centifaradio", "10^(−3) (mF) milifaradio", "10^(-6) (µF) microfaradio", "10^(−9) (nF) nanofaradio", "10^(−12) (pF) picofaradio", "(F) Faradio", "10^(1 ) (daF) decafaradio", "10^(2)(hF) hectofaradio", "10^(3) (kF) kilofaradio", "10^(6) (MF) megafaradio", "10^(9) (GF) gigafaradio", "10^(12) (TF) terafaradio" }));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Ingrese la inductancia (henrios):");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Reactancia Capacitiva (XC):");

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Reactancia Capacitiva");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Reactancia Inductiva (XL):");
        jLabel8.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Ingrese la capcidad electrica (faradios):");

        henrios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10^(−1) (dH) decihenrio", "10^(−2)(cH) centihenrio", "10^(−3) (mH) milihenrio", "10^(-6) (µH) microhenrio", "10^(−9) (nH) nanohenrio", "10^(−12) (pH) picohenrio", "(H) Henrio", "10^(1 ) (daH) decahenrio", "10^(2)(hH) hectohenrio", "10^(3) (kH) kilohenrio", "10^(6) (MH) megahenrio", "10^(9) (GH) gigahenrio", "10^(12) (TH) terahenrio" }));

        frec.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10^(−1) (dHZ) decihercio", "10^(−2)(cHZ) centihercio", "10^(−3) (mHZ) milihercio", "10^(-6) (µHZ) microhercio", "10^(−9) (nHZ) nanohercio", "10^(−12) (pHZ) picohercio", "(HZ) hercio", "10^(1 ) (daHZ) decahercio", "10^(2)(hHZ) hectohercio", "10^(3) (kHZ) kilohercio", "10^(6) (MHZ) megahercio", "10^(9) (GHZ) gigahercio", "10^(12) (THZ) terahercio" }));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Ingrese la frecuencia (hercios):");

        Resuelve.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Resuelve.setText("Resolver");
        Resuelve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResuelveActionPerformed(evt);
            }
        });

        frecuencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10^(−1) (dHZ) decihercio", "10^(−2)(cHZ) centihercio", "10^(−3) (mHZ) milihercio", "10^(-6) (µHZ) microhercio", "10^(−9) (nHZ) nanohercio", "10^(−12) (pHZ) picohercio", "(HZ) hercio", "10^(1 ) (daHZ) decahercio", "10^(2)(hHZ) hectohercio", "10^(3) (kHZ) kilohercio", "10^(6) (MHZ) megahercio", "10^(9) (GHZ) gigahercio", "10^(12) (THZ) terahercio" }));

        Resuelve1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Resuelve1.setText("Resolver");
        Resuelve1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Resuelve1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Ingrese la frecuencia (hercios):");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(405, 405, 405)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addComponent(Resuelve, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(320, 320, 320)
                            .addComponent(hen, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(henrios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap(323, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(herz1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(5, 5, 5)
                                    .addComponent(frec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(Xl, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(8, 8, 8))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(54, 54, 54)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(Resuelve1)
                                    .addGap(160, 160, 160))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel8))
                                    .addGap(26, 26, 26)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(herz, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(fara, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                                        .addComponent(Xc))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(faradios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(frecuencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(292, 292, 292))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(faradios, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(fara, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(herz, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(frecuencia, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Resuelve, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Xc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(henrios, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(frec, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(herz1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Resuelve1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Xl, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(168, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reactancias", jPanel1);
        jTabbedPane1.addTab("tab2", jPanel2);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Resuelve1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Resuelve1ActionPerformed
        if(!hen.getText().equals("") && !herz1.getText().equals("")){
        IH();
        FH1();
        resuelveRI();
         }else{
           javax.swing.JOptionPane.showMessageDialog(this,"Faltan campos por llenar \n","CUIDADO",javax.swing.JOptionPane.INFORMATION_MESSAGE);  
      }
    }//GEN-LAST:event_Resuelve1ActionPerformed

    private void ResuelveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResuelveActionPerformed
        if(!fara.getText().equals("") && !herz.getText().equals("")){
        CE();
        FH();
        resuelveXC();
    }else{
           javax.swing.JOptionPane.showMessageDialog(this,"Faltan campos por llenar \n","CUIDADO",javax.swing.JOptionPane.INFORMATION_MESSAGE);  
      }
    }//GEN-LAST:event_ResuelveActionPerformed

   public void CE(){
       getFarad=Double.parseDouble(fara.getText());
       if (faradios.getSelectedIndex()==0){
           getFaradios=getFarad*Math.pow(10,(-1));
       }
       if (faradios.getSelectedIndex()==1){
           getFaradios=getFarad*Math.pow(10,(-2));
       }
       if (faradios.getSelectedIndex()==2){
           getFaradios=getFarad*Math.pow(10,(-3));
       }
       if (faradios.getSelectedIndex()==3){
           getFaradios=getFarad*Math.pow(10,(-6));
       }
       if (faradios.getSelectedIndex()==4){
           getFaradios=getFarad*Math.pow(10,(-9));
       }
       if (faradios.getSelectedIndex()==5){
           getFaradios=getFarad*Math.pow(10,(-12));
       }
       if (faradios.getSelectedIndex()==6){
           getFaradios=getFarad;
       }
       if (faradios.getSelectedIndex()==7){
           getFaradios=getFarad*Math.pow(10,1);
       }
       if (faradios.getSelectedIndex()==8){
              getFaradios=getFarad*Math.pow(10,2);
       }
       if (faradios.getSelectedIndex()==9){
              getFaradios=getFarad*Math.pow(10,3);
       }
       if (faradios.getSelectedIndex()==10){
              getFaradios=getFarad*Math.pow(10,6);
       }
       if (faradios.getSelectedIndex()==11){
              getFaradios=getFarad*Math.pow(10,9);
       }
       if (faradios.getSelectedIndex()==12){
              getFaradios=getFarad*Math.pow(10,12);
       }
   }
   
    public void FH(){
      getHercios=Double.parseDouble(herz.getText());
       if (frecuencia.getSelectedIndex()==0){
           getFrecuencia=getHercios*Math.pow(10,(-1));
       }
       if (frecuencia.getSelectedIndex()==1){
           getFrecuencia=getHercios*Math.pow(10,(-2));
       }
       if (frecuencia.getSelectedIndex()==2){
           getFrecuencia=getHercios*Math.pow(10,(-3));
       }
       if (frecuencia.getSelectedIndex()==3){
           getFrecuencia=getHercios*Math.pow(10,(-6));
       }
       if (frecuencia.getSelectedIndex()==4){
           getFrecuencia=getHercios*Math.pow(10,(-9));
       }
       if (frecuencia.getSelectedIndex()==5){
           getFrecuencia=getHercios*Math.pow(10,(-12));
       }
        if (frecuencia.getSelectedIndex()==6){
           getFrecuencia=getHercios;
       }
       if (frecuencia.getSelectedIndex()==7){
           getFrecuencia=getHercios*Math.pow(10,1);
       }
       if (frecuencia.getSelectedIndex()==8){
              getFrecuencia=getHercios*Math.pow(10,2);
       }
       if (frecuencia.getSelectedIndex()==9){
              getFrecuencia=getHercios*Math.pow(10,3);
       }
       if (frecuencia.getSelectedIndex()==10){
              getFrecuencia=getHercios*Math.pow(10,6);
       }
       if (frecuencia.getSelectedIndex()==11){
             getFrecuencia=getHercios*Math.pow(10,9);
       }
       if (frecuencia.getSelectedIndex()==12){
             getFrecuencia=getHercios*Math.pow(10,12);
       }
   }
    
     public void FH1(){
      getHercios1=Double.parseDouble(herz1.getText());
       if (frec.getSelectedIndex()==0){
           getFrecuencia1=getHercios1*Math.pow(10,(-1));
       }
       if (frec.getSelectedIndex()==1){
           getFrecuencia1=getHercios1*Math.pow(10,(-2));
       }
       if (frec.getSelectedIndex()==2){
           getFrecuencia1=getHercios1*Math.pow(10,(-3));
       }
       if (frec.getSelectedIndex()==3){
           getFrecuencia1=getHercios1*Math.pow(10,(-6));
       }
       if (frec.getSelectedIndex()==4){
           getFrecuencia1=getHercios1*Math.pow(10,(-9));
       }
       if (frec.getSelectedIndex()==5){
           getFrecuencia1=getHercios1*Math.pow(10,(-12));
       }
        if (frec.getSelectedIndex()==6){
           getFrecuencia1=getHercios1;
       }
       if (frec.getSelectedIndex()==7){
           getFrecuencia1=getHercios1*Math.pow(10,1);
       }
       if (frec.getSelectedIndex()==8){
              getFrecuencia1=getHercios1*Math.pow(10,2);
       }
       if (frec.getSelectedIndex()==9){
              getFrecuencia1=getHercios1*Math.pow(10,3);
       }
       if (frec.getSelectedIndex()==10){
              getFrecuencia1=getHercios1*Math.pow(10,6);
       }
       if (frec.getSelectedIndex()==11){
             getFrecuencia1=getHercios1*Math.pow(10,9);
       }
       if (frec.getSelectedIndex()==12){
             getFrecuencia1=getHercios1*Math.pow(10,12);
       }
   }
  public void IH(){
      getHenr=Double.parseDouble(hen.getText());
       if (henrios.getSelectedIndex()==0){
           getHenrios=getHenr*Math.pow(10,(-1));
       }
       if (henrios.getSelectedIndex()==1){
           getHenrios=getHenr*Math.pow(10,(-2));
       }
       if (henrios.getSelectedIndex()==2){
           getHenrios=getHenr*Math.pow(10,(-3));
       }
       if (henrios.getSelectedIndex()==3){
           getHenrios=getHenr*Math.pow(10,(-6));
       }
       if (henrios.getSelectedIndex()==4){
           getHenrios=getHenr*Math.pow(10,(-9));
       }
       if (henrios.getSelectedIndex()==5){
           getHenrios=getHenr*Math.pow(10,(-12));
       }
        if (henrios.getSelectedIndex()==6){
           getHenrios=getHenr;
       }
       if (henrios.getSelectedIndex()==7){
           getHenrios=getHenr*Math.pow(10,1);
       }
       if (henrios.getSelectedIndex()==8){
              getHenrios=getHenr*Math.pow(10,2);
       }
       if (henrios.getSelectedIndex()==9){
              getHenrios=getHenr*Math.pow(10,3);
       }
       if (henrios.getSelectedIndex()==10){
              getHenrios=getHenr*Math.pow(10,6);
       }
       if (henrios.getSelectedIndex()==11){
             getHenrios=getHenr*Math.pow(10,9);
       }
       if (henrios.getSelectedIndex()==12){
             getHenrios=getHenr*Math.pow(10,12);
       }
   }  
    public void resuelveXC(){
        double xc=-1/(((2*Math.PI)*(getFrecuencia))*getFaradios);
        fmt.setRes(xc);
       Xc.setText("j"+fmt.getRes()+"Ω");
       //Xc.setText(Double.toString(getFrecuencia));
        
    }
    
    public void resuelveRI(){
        double xl=(((2*Math.PI)*(getFrecuencia1))*getHenrios);
        fmt.setRes(xl);
       Xl.setText("j"+fmt.getRes()+"Ω");
      // Xl.setText(Double.toString(getFrecuencia1));
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reactancias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reactancias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reactancias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reactancias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reactancias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Resuelve;
    private javax.swing.JButton Resuelve1;
    private javax.swing.JTextField Xc;
    private javax.swing.JTextField Xl;
    private javax.swing.JTextField fara;
    private javax.swing.JComboBox<String> faradios;
    private javax.swing.JComboBox<String> frec;
    private javax.swing.JComboBox<String> frecuencia;
    private javax.swing.JTextField hen;
    private javax.swing.JComboBox<String> henrios;
    private javax.swing.JTextField herz;
    private javax.swing.JTextField herz1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
